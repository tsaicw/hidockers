#!/bin/bash

OPEN5GS_CONFIG_PATH=/etc/open5gs
SERVICES=(amf ausf bsf hss mme nrf nssf pcf pcrf scp sgwc sgwu smf udm udr upf)


function mongodb_start {
  if [ $(ps aux | grep mongod | grep -v grep | wc -l) -eq 0 ]; then
    /usr/bin/mongod --config /etc/mongod.conf &
    echo -e "\e[92mWait for MongoDB server startup ...\n\e[39m"
    sleep 5
  fi
}

# tun iface create
function tun_create {
  if ! grep "ogstun" /proc/net/dev > /dev/null; then
    echo -e "\e[92mCreating \e[93mogstun \e[92mdevice\n\e[39m"
    ip tuntap add name ogstun mode tun
  fi

  ip addr del ${IPV4_TUN_ADDR} dev ogstun 2> /dev/null || true
  ip addr add ${IPV4_TUN_ADDR} dev ogstun

  # sysctl -w net.ipv6.conf.all.disable_ipv6=0
  ip addr del ${IPV6_TUN_ADDR} dev ogstun 2> /dev/null || true
  ip addr add ${IPV6_TUN_ADDR} dev ogstun

  ip link set ogstun up

  # sysctl -w net.ipv4.ip_forward=1
  if [ "${ENABLE_NAT}" = true ] ; then
    iptables -t nat -A POSTROUTING -s ${IPV4_TUN_SUBNET} ! -o ogstun -j MASQUERADE
  fi
}

function open5gs_config {
  ETH0_IPADDR=$(ip -br addr show dev eth0 | awk '{print $3}' | cut -d'/' -f1)

  if [ -n "${ETH0_IPADDR}" ]; then
    # AMF
    yq -i ".amf.ngap[0].addr = \"${ETH0_IPADDR}\"" ${OPEN5GS_CONFIG_PATH}/amf.yaml

    # UPF
    yq -i ".upf.gtpu[0].addr = \"${ETH0_IPADDR}\"" ${OPEN5GS_CONFIG_PATH}/upf.yaml
    if [ -n "${UPF_GTPU_ADVERTISE}" ]; then
      yq -i ".upf.gtpu[0].advertise = \"${UPF_GTPU_ADVERTISE}\"" ${OPEN5GS_CONFIG_PATH}/upf.yaml
    fi
  fi
}

function open5gs_start {
  open5gs_config

  echo -e "\e[92mStart Open5GS services\e[39m"
  for service in ${SERVICES[@]}; do
    /usr/bin/open5gs-${service}d -c /etc/open5gs/${service}.yaml &
  done
}


#
# ========== Start from here ==========
#
tun_create
mongodb_start

open5gs_start

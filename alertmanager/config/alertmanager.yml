global:
  # resolve_timeout: 5m

  # Dlink Office365
  smtp_smarthost: 'smtp.office365.com:587'
  smtp_auth_username: 'decsglobal@dlinkcorp.com'
  smtp_auth_password: ''
  smtp_require_tls: true
  smtp_from: 'decsglobal@dlinkcorp.com'

  # Amazon SES
  # smtp_smarthost: 'email-smtp.us-east-1.amazonaws.com:587'
  # smtp_auth_username: ''
  # smtp_auth_password: ''
  # smtp_require_tls: true
  # smtp_from: 'devops@decs.dlink.com'

  slack_api_url: ''

route:
  receiver: mbsd-devops # Fallback
  group_by: [job, sitename, alertname]
  group_wait: 10s # 30s
  group_interval: 5m
  repeat_interval: 4h
  routes:
  - receiver: global-production-ops
    matchers:
    - sitename = portal
    - canonicalname = deu-prod
  - receiver: global-staging-ops
    matchers:
    - sitename = global-staging
  - receiver: mbsd-devops
    matchers:
    - alertname = JenkinsDown
  - receiver: mbsd-notification
    matchers:
    - alertname = InstanceDown
  - receiver: mbsd-notification
    matchers:
    - alertname = CPUThreshold
  - receiver: mbsd-notification
    matchers:
    - alertname = MemoryThreshold
  - receiver: pagerduty_test
    matchers:
    - alertname = PagerDuty Test

receivers:
- name: mbsd-devops
  pagerduty_configs:
  - service_key: '' # MBSD Lab
    send_resolved: false
  # email_configs:
  # - to: 'daniel.tsai@dlinkcorp.com'
  #   send_resolved: true

- name: global-production-ops
  # webhook_configs:
  # - url: 'http://promteams:2000/alertmanager'
  #   send_resolved: true
  pagerduty_configs:
  - service_key: '' # Global-Production D-ECS
    send_resolved: false
  # email_configs:
  # - to: 'MBSD@dlink.com.tw'
  #   send_resolved: true

- name: global-staging-ops
  # webhook_configs:
  # - url: 'http://promteams:2000/alertmanager'
  #   send_resolved: true
  pagerduty_configs:
  - service_key: '' # Global-Staging D-ECS
    send_resolved: false

- name: mbsd-notification
  email_configs:
  - to: 'MBSD@dlink.com.tw'
    send_resolved: true
  webhook_configs:
  - url: 'http://promteams:2000/alertmanager'
    send_resolved: true
  slack_configs:
  - channel: '#dlink-mbsd-devops'
    send_resolved: true
    icon_url: https://avatars3.githubusercontent.com/u/3380462
    title: |-
      [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
      {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
        {{" "}}(
        {{- with .CommonLabels.Remove .GroupLabels.Names }}
          {{- range $index, $label := .SortedPairs -}}
            {{ if $index }}, {{ end }}
            {{- $label.Name }}="{{ $label.Value -}}"
          {{- end }}
        {{- end -}}
        )
      {{- end }}
    text: >-
      {{ with index .Alerts 0 -}}
        :chart_with_upwards_trend: *<{{ .GeneratorURL }}|Graph>*
        {{- if .Annotations.runbook }} :notebook: *<{{ .Annotations.runbook }}|Runbook>*{{ end }}
      {{ end }}

      *Alert details*:


      {{ range .Alerts -}}
      *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

      *Description:* {{ .Annotations.description }}

      *Details:*
        {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
        {{ end }}
      {{ end }}

- name: pagerduty_test
  pagerduty_configs:
  - service_key: '' # TestService
    send_resolved: false

# - name: gmail-notifications
#   email_configs:
#   - to: @gmail.com
#     from: @gmail.com
#     smarthost: smtp.gmail.com:587
#     auth_username: @gmail.com
#     auth_identity: @gmail.com
#     auth_password:
#     send_resolved: true

# - name: msteams
#   webhook_configs:                            # https://prometheus.io/docs/alerting/configuration/#webhook_config
#   - url: 'http://promteams:2000/alertmanager' # the prometheus-msteams proxy
#   # - url: 'http://prom2teams:8089/v2/Connector'
#     send_resolved: true

# inhibit_rules:
# - source_matchers:
#   - severity = critical
#   target_matchers:
#   - severity = warning
#   equal: ['alertname', 'dev', 'instance']
